import fs from 'fs';
import path from 'path';

// Function to convert JSON to JS module
async function convertJsonToJs(inputJsonPath, outputJsPath) {
  try {
    // Read the input JSON file
    const jsonData = await fs.promises.readFile(inputJsonPath, 'utf-8');

    // Parse the JSON data
    const parsedData = JSON.parse(jsonData);

    // Convert the data to a JS export format
    const jsContent = `// Generated by convertJsonToJs.mjs\n\nexport const kjvStrongsData = ${JSON.stringify(parsedData, null, 2)};`;

    // Write the output JavaScript file
    await fs.promises.writeFile(outputJsPath, jsContent, 'utf-8');

    console.log(`Conversion successful: ${outputJsPath}`);
  } catch (error) {
    console.error('Error during conversion:', error);
  }
}

// Get paths from command-line arguments
const args = process.argv.slice(2);
const inputJsonPath = args[0] || '';  // Default to empty if no argument is provided
const outputJsPath = args[1] || '';   // Default to empty if no argument is provided

if (!inputJsonPath || !outputJsPath) {
  console.error('Please provide both input JSON path and output JS path as arguments.');
  process.exit(1);
}

// Run the conversion
convertJsonToJs(inputJsonPath, outputJsPath);
